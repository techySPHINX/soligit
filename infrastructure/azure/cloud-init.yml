#cloud-config
package_update: true
package_upgrade: true

packages:
  - python3
  - python3-pip
  - python3-venv
  - git
  - nginx
  - supervisor
  - build-essential
  - curl

write_files:
  - path: /etc/supervisor/conf.d/soligit-backend.conf
    content: |
      [program:soligit-backend]
      directory=/opt/soligit/backend
      command=/opt/soligit/backend/venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000
      user=${admin_username}
      autostart=true
      autorestart=true
      stderr_logfile=/var/log/soligit-backend.err.log
      stdout_logfile=/var/log/soligit-backend.out.log
      environment=PATH="/opt/soligit/backend/venv/bin"

  - path: /etc/nginx/sites-available/soligit-backend
    content: |
      server {
          listen 80;
          server_name _;

          location / {
              proxy_pass http://127.0.0.1:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

  - path: /opt/soligit/deploy.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e

      # Variables
      REPO_URL="https://github.com/techySPHINX/soligit.git"
      APP_DIR="/opt/soligit"
      BACKEND_DIR="$APP_DIR/backend"

      # Clone or update repository
      if [ ! -d "$APP_DIR/.git" ]; then
          echo "Cloning repository..."
          git clone $REPO_URL $APP_DIR
      else
          echo "Updating repository..."
          cd $APP_DIR
          git pull origin main
      fi

      # Setup backend
      cd $BACKEND_DIR

      # Create virtual environment if it doesn't exist
      if [ ! -d "venv" ]; then
          echo "Creating virtual environment..."
          python3 -m venv venv
      fi

      # Activate virtual environment and install dependencies
      echo "Installing dependencies..."
      source venv/bin/activate
      pip install --upgrade pip
      pip install -r requirements.txt

      # Create .env file if it doesn't exist
      if [ ! -f ".env" ]; then
          echo "Creating .env file..."
          cat > .env << 'EOF'
      GEMINI_API_KEY=your_gemini_api_key_here
      WEAVIATE_API_KEY=your_weaviate_api_key_here
      WEAVIATE_ENVIRONMENT=asia-southeast1-gcp-free
      WEAVIATE_INDEX=chatpdf
      GITHUB_PERSONAL_ACCESS_TOKEN=your_github_token_here
      AAI_TOKEN=your_assemblyai_token_here
      EOF
          echo "Please edit /opt/soligit/backend/.env with your actual API keys"
      fi

      # Set proper ownership
      chown -R ${admin_username}:${admin_username} $APP_DIR

      # Restart services
      echo "Restarting services..."
      systemctl restart supervisor
      systemctl restart nginx

      echo "Deployment completed successfully!"

runcmd:
  - mkdir -p /opt/soligit
  - chown -R ${admin_username}:${admin_username} /opt/soligit
  
  # Configure nginx
  - rm -f /etc/nginx/sites-enabled/default
  - ln -sf /etc/nginx/sites-available/soligit-backend /etc/nginx/sites-enabled/
  - systemctl enable nginx
  - systemctl restart nginx
  
  # Configure supervisor
  - systemctl enable supervisor
  - systemctl start supervisor
  
  # Run initial deployment
  - sudo -u ${admin_username} /opt/soligit/deploy.sh
  
  # Setup firewall (optional)
  - ufw allow 22/tcp
  - ufw allow 80/tcp
  - ufw allow 443/tcp
  - ufw allow 8000/tcp
  - echo "y" | ufw enable

final_message: "Soligit backend deployment completed! The system is ready."
